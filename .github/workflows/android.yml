name: Android CI/CD via Bitrise

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
  workflow_dispatch:
  release:
    types: [published]

jobs:
  validate:
    name: Validate Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant Permission to Execute Gradle
        run: chmod +x ./gradlew

     #- name: Run Lint Checks
     #   run: ./gradlew lint
     #   continue-on-error: true

     # - name: Run Unit Tests
     #   run: ./gradlew test

  trigger-bitrise:
    name: Trigger Bitrise Build
    needs: validate
    runs-on: ubuntu-latest

    steps:
      - name: Debug API Token & App Slug
        run: |
          echo "Checking API Token Length: ${#BITRISE_API_TOKEN}"
          echo "Checking App Slug Length: ${#BITRISE_APP_SLUG}"
        env:
          BITRISE_API_TOKEN: ${{ secrets.BITRISE_API_TOKEN }}
          BITRISE_APP_SLUG: ${{ secrets.BITRISE_APP_SLUG }}

      - name: Trigger Bitrise Build
        run: |
          BITRISE_BUILD_URL="https://api.bitrise.io/v0.1/apps/${{ secrets.BITRISE_APP_SLUG }}/builds"
          RESPONSE=$(curl -X POST "$BITRISE_BUILD_URL" \
            -H "Authorization: ${{ secrets.BITRISE_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data '{
              "hook_info": { "type": "bitrise" },
              "build_params": {
                "branch": "main",
                "workflow_id": "build_apk"
              },
              "triggered_by": "GitHub Actions"
            }')
    
          echo "API Response: $RESPONSE"
    
          BUILD_ID=$(echo "$RESPONSE" | jq -r '.data.build_slug')
    
          if [[ -z "$BUILD_ID" || "$BUILD_ID" == "null" ]]; then
            echo "Error: Failed to trigger build. API Response: $RESPONSE"
            exit 1
          fi
    
          echo "Triggered Build ID: $BUILD_ID"



      - name: Wait for Bitrise Build to Complete
        run: |
          BITRISE_BUILD_ID=$(curl -s -X POST "https://api.bitrise.io/v0.1/apps/${{ secrets.BITRISE_APP_SLUG }}/builds" \
            -H "Authorization: ${{ secrets.BITRISE_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data '{ "build_params": { "branch": "main", "workflow_id": "deploy" } }' | jq -r '.data.build_slug')

          if [[ -z "$BITRISE_BUILD_ID" ]]; then
            echo "Failed to get build ID from Bitrise"
            exit 1
          fi

          echo "Triggered Bitrise Build ID: $BITRISE_BUILD_ID"

          while true; do
            RESPONSE=$(curl -s -H "Authorization: ${{ secrets.BITRISE_API_TOKEN }}" "https://api.bitrise.io/v0.1/apps/${{ secrets.BITRISE_APP_SLUG }}/builds/$BITRISE_BUILD_ID")
            STATUS=$(echo "$RESPONSE" | jq -r '.data.status_text')

            if [[ -z "$STATUS" || "$STATUS" == "null" ]]; then
              echo "Error: Invalid response from Bitrise API"
              echo "Response: $RESPONSE"
              exit 1
            fi

            echo "Current Bitrise Build Status: $STATUS"

            if [[ "$STATUS" == "success" ]]; then
              echo "Bitrise Build Succeeded!"
              exit 0
            elif [[ "$STATUS" == "failed" ]]; then
              echo "Bitrise Build Failed!"
              exit 1
            fi

            sleep 30
          done


  release:
    name: Deploy Release (Tag Push)
    if: startsWith(github.ref, 'refs/tags/')
    needs: trigger-bitrise
    runs-on: ubuntu-latest

    steps:
      - name: Call Bitrise API for Release
        run: |
          BITRISE_BUILD_URL="https://api.bitrise.io/v0.1/apps/${{ secrets.BITRISE_APP_SLUG }}/builds"
          curl -X POST "$BITRISE_BUILD_URL" \
            -H "Authorization: Token ${{ secrets.BITRISE_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data '{
              "hook_info": { "type": "bitrise" },
              "build_params": {
                "branch": "main",
                "workflow_id": "release"
              },
              "triggered_by": "GitHub Actions"
            }'
